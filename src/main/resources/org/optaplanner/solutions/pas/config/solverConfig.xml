<?xml version="1.0" encoding="UTF-8"?>
<solver>

  <environmentMode>REPRODUCIBLE</environmentMode>
  <!--<environmentMode>FULL_ASSERT</environmentMode>--><!-- To slowly prove there are no bugs in this code -->
  <!--<moveThreadCount>AUTO</moveThreadCount>--><!-- To solve faster by saturating multiple CPU cores -->

  <solutionClass>org.optaplanner.solutions.pas.domain.PASPlanningSolver
  </solutionClass>

  <entityClass>org.optaplanner.solutions.pas.domain.ResourceAllocation
  </entityClass>

  <!-- Domain model configuration -->
  <!-- <scanAnnotatedClasses>
    <packageInclude>org.optaplanner.solutions.pas</packageInclude>
  </scanAnnotatedClasses> -->

  <!-- Score configuration -->
  <scoreDirectorFactory>
    <!--<easyScoreCalculatorClass>org.optaplanner.examples.cloudbalancing.optional.score.CloudBalancingEasyScoreCalculator</easyScoreCalculatorClass>-->
    <!--<easyScoreCalculatorClass>org.optaplanner.examples.cloudbalancing.optional.score.CloudBalancingMapBasedEasyScoreCalculator</easyScoreCalculatorClass>-->
    <!--<incrementalScoreCalculatorClass>org.optaplanner.examples.cloudbalancing.optional.score.CloudBalancingIncrementalScoreCalculator</incrementalScoreCalculatorClass>-->
    <scoreDrl>org/optaplanner/solutions/pas/drools/constraintScoreRules.drl</scoreDrl>
    <initializingScoreTrend>ONLY_DOWN</initializingScoreTrend>
    <!--<assertionScoreDirectorFactory>-->
      <!--<easyScoreCalculatorClass>org.optaplanner.examples.cloudbalancing.optional.score.CloudBalancingMapBasedEasyScoreCalculator</easyScoreCalculatorClass>-->
    <!--</assertionScoreDirectorFactory>-->
  </scoreDirectorFactory>

  <!-- Optimization algorithms configuration -->
  <termination>
    <!-- <minutesSpentLimit>3</minutesSpentLimit> -->
    <bestScoreLimit>0hard/0soft</bestScoreLimit>
    <unimprovedSecondsSpentLimit>10</unimprovedSecondsSpentLimit>
  </termination>

  <!-- Power tweaked optimization algorithms configuration -->
<!--  <constructionHeuristic>-->
<!--    <constructionHeuristicType>FIRST_FIT_DECREASING</constructionHeuristicType>-->
<!--    <changeMoveSelector>-->
<!--      <valueSelector />-->
<!--    </changeMoveSelector>-->
<!--  </constructionHeuristic>-->

  <constructionHeuristic>
    <constructionHeuristicType>FIRST_FIT_DECREASING</constructionHeuristicType>
  </constructionHeuristic>

  <localSearch>
    <localSearchType>TABU_SEARCH</localSearchType>
  </localSearch>

<!--  <localSearch>-->
<!--    <changeMoveSelector>-->
<!--      <selectionOrder>ORIGINAL</selectionOrder>-->
<!--    </changeMoveSelector>-->
<!--    &lt;!&ndash; changeMoveSelector is the generic form of RowChangeMoveFactory: &ndash;&gt;-->
<!--    &lt;!&ndash;<moveListFactory>&ndash;&gt;-->
<!--    &lt;!&ndash;<moveListFactoryClass>org.optaplanner.examples.nqueens.binpacking.move.factory.RowChangeMoveFactory</moveListFactoryClass>&ndash;&gt;-->
<!--    &lt;!&ndash;</moveListFactory>&ndash;&gt;-->
<!--    <acceptor>-->
<!--      <entityTabuSize>5</entityTabuSize>-->
<!--    </acceptor>-->
<!--    <forager>-->
<!--      &lt;!&ndash; Real world problems require use of <acceptedCountLimit> &ndash;&gt;-->
<!--    </forager>-->
<!--  </localSearch>-->

<!--  <localSearch>-->
<!--    <unionMoveSelector>-->
<!--      <swapMoveSelector/>-->
<!--      <pillarSwapMoveSelector/>-->
<!--    </unionMoveSelector>-->
<!--    <acceptor>-->
<!--      <simulatedAnnealingStartingTemperature>2hard/100soft</simulatedAnnealingStartingTemperature>-->
<!--    </acceptor>-->
<!--    <forager>-->
<!--      <acceptedCountLimit>1</acceptedCountLimit>-->
<!--    </forager>-->
<!--  </localSearch>-->


<!-- Alternative power tweaked optimization algorithms configuration -->
  <!--<partitionedSearch>-->
    <!--<solutionPartitionerClass>org.optaplanner.examples.cloudbalancing.optional.partitioner.CloudBalancePartitioner</solutionPartitionerClass>-->
    <!--<solutionPartitionerCustomProperties>-->
      <!--<partCount>4</partCount>-->
      <!--<minimumProcessListSize>300</minimumProcessListSize>-->
    <!--</solutionPartitionerCustomProperties>-->
  <!--</partitionedSearch>-->
</solver>
